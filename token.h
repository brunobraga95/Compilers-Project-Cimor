#ifndef TOKEN_H
#define TOKEN_H

enum token{
	TOKEN_IDENTIFIER = 1,
	TOKEN_STRING = 2,
	TOKEN_WHILE = 3,
	TOKEN_ELSE = 4,
	TOKEN_ARRAY = 5,
	TOKEN_IF = 6,
	TOKEN_INTEGER_LITERAL = 7,
	TOKEN_CHARACTER_LITERAL = 8,
	TOKEN_GE = 9,
	TOKEN_SCOLON = 10,
	TOKEN_LE = 11,
	TOKEN_GT= 12,
	TOKEN_LT= 13,
	TOKEN_OR= 14,
	TOKEN_AND= 15,
	TOKEN_NOT= 16,
	TOKEN_EQ= 17,
	TOKEN_NE= 18,
	TOKEN_ADD= 19,
	TOKEN_SUB= 20,
	TOKEN_MULT= 21,
	TOKEN_DIV= 22,
	TOKEN_MOD= 23,
	TOKEN_NEG= 24,
	TOKEN_OPPAR= 25,
	TOKEN_CLPAR= 26,
	TOKEN_OPBRAK= 27,
	TOKEN_CLBRAK= 28,
	TOKEN_OPBRACE= 29,
	TOKEN_CLBRACE= 30,
	TOKEN_ASSIGN= 31,
	TOKEN_INTEGER= 32,
	TOKEN_CHAR= 33,
	TOKEN_DO= 34,
	TOKEN_FALSE= 35,
	TOKEN_STRING_LITERAL= 36,
	TOKEN_ERROR= 37,
	TOKEN_VOID = 38,
        TOKEN_TRUE = 39,
        TOKEN_FUNCTION = 40,
        TOKEN_FOR = 41,
        TOKEN_PRINT = 42,
        TOKEN_BOOLEAN =  43,
        TOKEN_RETURN = 44,
	TOKEN_INCREMENT = 45,
	TOKEN_DECREMENT = 46,
	TOKEN_EXPONENTIATION = 47,
	TOKEN_COLON = 48,
	TOKEN_COMMA = 49,

	};
typedef enum token token_t;

char* token_string(token_t t);
#endif
